<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:DistanceMethodTest]/[method:distance_whenGivenTwoPositions_isCalculatedCorrectly()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>14</index></indexes><blocks><block>1</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:DistanceMethodTest]/[method:distance_whenGivenTwoPositions_isCalculatedCorrectly()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:DistanceMethodTest]/[method:distance_whenGivenTwoPositions_isCalculatedCorrectly()]</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>19</index></indexes><blocks><block>3</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:DistanceMethodTest]/[method:distance_whenGivenTwoPositions_isCalculatedCorrectly()]</killingTest><description>replaced double return with 0.0d for fr/epu/bicycle/Position::distance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>getX</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:ConstructorMethodTest]/[nested-class:ConstructorWithParametersTest]/[method:constructor_whenInitializedWithTwoNumbers_coordinatesAreCorrect()]</killingTest><description>replaced double return with 0.0d for fr/epu/bicycle/Position::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:ConstructorMethodTest]/[nested-class:ConstructorWithParametersTest]/[method:constructor_whenInitializedWithTwoNumbers_coordinatesAreCorrect()]</killingTest><description>replaced double return with 0.0d for fr/epu/bicycle/Position::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>20</index></indexes><blocks><block>3</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:EquivalentMethodTest]/[method:equivalent_whenTwoPositionsAreNearEnough_true()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>16</index></indexes><blocks><block>2</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:EquivalentMethodTest]/[method:equivalent_whenTwoPositionsAreNearEnough_true()]</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:EquivalentMethodTest]/[method:equivalent_whenTwoPositionsAreNearEnough_true()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>20</index></indexes><blocks><block>3</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:EquivalentMethodTest]/[method:equivalent_whenTwoPositionsAreNearEnough_true()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Position.java</sourceFile><mutatedClass>fr.epu.bicycle.Position</mutatedClass><mutatedMethod>isEquivalent</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>28</index></indexes><blocks><block>6</block></blocks><killingTest>fr.epu.bicycle.PositionTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.PositionTest]/[nested-class:EquivalentMethodTest]/[method:equivalent_whenTwoPositionsAreNearEnough_true()]</killingTest><description>replaced boolean return with true for fr/epu/bicycle/Position::isEquivalent</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>addKm</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>addKm</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTest>fr.epu.bicycle.EBikeTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.EBikeTest]/[method:testAddKm()]</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>addKm</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.EBikeTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.EBikeTest]/[method:testAddKm()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>getCharge</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced int return with 0 for fr/epu/bicycle/ElectricVehicle::getCharge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>getKm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.EBikeTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.EBikeTest]/[method:testCreateEBike()]</killingTest><description>replaced double return with 0.0d for fr/epu/bicycle/ElectricVehicle::getKm</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()Ljava/util/Optional;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()Ljava/util/Optional;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()Ljava/util/Optional;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with Optional.empty for fr/epu/bicycle/ElectricVehicle::getPosition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>isBorrowable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>11</index></indexes><blocks><block>2</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>isBorrowable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>isBorrowable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>2</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ElectricVehicle.java</sourceFile><mutatedClass>fr.epu.bicycle.ElectricVehicle</mutatedClass><mutatedMethod>isBorrowable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>19</index></indexes><blocks><block>5</block></blocks><killingTest/><description>replaced boolean return with true for fr/epu/bicycle/ElectricVehicle::isBorrowable</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>kmToMiles</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>kmToMiles</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced double return with 0.0d for fr/epu/bicycle/Main::kmToMiles</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>34</index></indexes><blocks><block>5</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>44</index></indexes><blocks><block>8</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>72</index></indexes><blocks><block>14</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>39</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to java/io/PrintStream::print</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>92</index></indexes><blocks><block>20</block></blocks><killingTest/><description>removed call to fr/epu/bicycle/EBike::addKm</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>102</index></indexes><blocks><block>24</block></blocks><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>108</index></indexes><blocks><block>25</block></blocks><killingTest/><description>removed call to java/io/PrintStream::print</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>milesToKm</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Main.java</sourceFile><mutatedClass>fr.epu.bicycle.Main</mutatedClass><mutatedMethod>milesToKm</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced double return with 0.0d for fr/epu/bicycle/Main::milesToKm</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTest>fr.epu.bicycle.BatteryTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.BatteryTest]/[nested-class:chargeMethodTest]/[method:testChargingAboveTheMax()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>charge</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>charge</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>27</index></indexes><blocks><block>3</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>charge</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>19</index></indexes><blocks><block>3</block></blocks><killingTest>fr.epu.bicycle.BatteryTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.BatteryTest]/[nested-class:chargeMethodTest]/[method:testChargingAboveTheMax()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>charge</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.BatteryTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.BatteryTest]/[nested-class:chargeMethodTest]/[method:testChargingAboveTheMax()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>charge</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>27</index></indexes><blocks><block>3</block></blocks><killingTest>fr.epu.bicycle.BatteryTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.BatteryTest]/[nested-class:chargeMethodTest]/[method:testChargingAboveTheMax()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>getCharge</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.BatteryTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.BatteryTest]/[nested-class:chargeMethodTest]/[method:testChargingAboveTheMax()]</killingTest><description>replaced int return with 0 for fr/epu/bicycle/Battery::getCharge</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>getChargePercentage</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>getChargePercentage</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>11</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Battery.java</sourceFile><mutatedClass>fr.epu.bicycle.Battery</mutatedClass><mutatedMethod>getChargePercentage</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>12</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced double return with 0.0d for fr/epu/bicycle/Battery::getChargePercentage</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>lambda$testChargingWithNegativeInteger$0</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.BatteryTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.BatteryTest]/[nested-class:chargeMethodTest]/[method:testChargingWithNegativeInteger()]</killingTest><description>removed call to fr/epu/bicycle/Battery::charge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>testChargingAboveTheMax</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.BatteryTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.BatteryTest]/[nested-class:chargeMethodTest]/[method:testChargingAboveTheMax()]</killingTest><description>removed call to fr/epu/bicycle/Battery::charge</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>testChargingAboveTheMax</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>testChargingAboveTheMax</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to fr/epu/bicycle/Battery::charge</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>testChargingAboveTheMax</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>testChargingWithNegativeInteger</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>18</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>testChargingWithPositiveInteger</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.BatteryTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.BatteryTest]/[nested-class:chargeMethodTest]/[method:testChargingWithPositiveInteger()]</killingTest><description>removed call to fr/epu/bicycle/Battery::charge</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>testChargingWithPositiveInteger</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>testChargingWithPositiveInteger</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest>fr.epu.bicycle.BatteryTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.BatteryTest]/[nested-class:chargeMethodTest]/[method:testChargingWithPositiveInteger()]</killingTest><description>removed call to fr/epu/bicycle/Battery::charge</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$chargeMethodTest</mutatedClass><mutatedMethod>testChargingWithPositiveInteger</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Fleet.java</sourceFile><mutatedClass>fr.epu.bicycle.Fleet</mutatedClass><mutatedMethod>around</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;D)Ljava/util/List;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>50</index></indexes><blocks><block>13</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Fleet.java</sourceFile><mutatedClass>fr.epu.bicycle.Fleet</mutatedClass><mutatedMethod>around</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;D)Ljava/util/List;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>26</index></indexes><blocks><block>7</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Fleet.java</sourceFile><mutatedClass>fr.epu.bicycle.Fleet</mutatedClass><mutatedMethod>around</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;D)Ljava/util/List;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>36</index></indexes><blocks><block>10</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Fleet.java</sourceFile><mutatedClass>fr.epu.bicycle.Fleet</mutatedClass><mutatedMethod>around</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;D)Ljava/util/List;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>50</index></indexes><blocks><block>13</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Fleet.java</sourceFile><mutatedClass>fr.epu.bicycle.Fleet</mutatedClass><mutatedMethod>around</mutatedMethod><methodDescription>(Lfr/epu/bicycle/Position;D)Ljava/util/List;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>65</index></indexes><blocks><block>17</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for fr/epu/bicycle/Fleet::around</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Fleet.java</sourceFile><mutatedClass>fr.epu.bicycle.Fleet</mutatedClass><mutatedMethod>getEBikeCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><indexes><index>27</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Fleet.java</sourceFile><mutatedClass>fr.epu.bicycle.Fleet</mutatedClass><mutatedMethod>getEBikeCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>24</index></indexes><blocks><block>5</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Fleet.java</sourceFile><mutatedClass>fr.epu.bicycle.Fleet</mutatedClass><mutatedMethod>getEBikeCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>36</index></indexes><blocks><block>8</block></blocks><killingTest/><description>replaced int return with 0 for fr/epu/bicycle/Fleet::getEBikeCount</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Fleet.java</sourceFile><mutatedClass>fr.epu.bicycle.Fleet</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced int return with 0 for fr/epu/bicycle/Fleet::getSize</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GPSTest.java</sourceFile><mutatedClass>fr.epu.bicycle.GPSTest$moveMethodTest</mutatedClass><mutatedMethod>moveMethodIsIdempotent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>8</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed call to fr/epu/bicycle/GPS::move</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GPSTest.java</sourceFile><mutatedClass>fr.epu.bicycle.GPSTest$moveMethodTest</mutatedClass><mutatedMethod>moveMethodIsIdempotent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to fr/epu/bicycle/GPS::move</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GPSTest.java</sourceFile><mutatedClass>fr.epu.bicycle.GPSTest$moveMethodTest</mutatedClass><mutatedMethod>moveMethodIsIdempotent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>37</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GPSTest.java</sourceFile><mutatedClass>fr.epu.bicycle.GPSTest$moveMethodTest</mutatedClass><mutatedMethod>moveMethodIsIdempotent</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>44</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GPSTest.java</sourceFile><mutatedClass>fr.epu.bicycle.GPSTest$moveMethodTest</mutatedClass><mutatedMethod>positionIsMovedCorrectly</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>8</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.GPSTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.GPSTest]/[nested-class:moveMethodTest]/[method:positionIsMovedCorrectly()]</killingTest><description>removed call to fr/epu/bicycle/GPS::move</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GPSTest.java</sourceFile><mutatedClass>fr.epu.bicycle.GPSTest$moveMethodTest</mutatedClass><mutatedMethod>positionIsMovedCorrectly</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>21</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GPSTest.java</sourceFile><mutatedClass>fr.epu.bicycle.GPSTest$moveMethodTest</mutatedClass><mutatedMethod>positionIsMovedCorrectly</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>27</index></indexes><blocks><block>5</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EBikeTest.java</sourceFile><mutatedClass>fr.epu.bicycle.EBikeTest</mutatedClass><mutatedMethod>testAddKm</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTest>fr.epu.bicycle.EBikeTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.EBikeTest]/[method:testAddKm()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EBikeTest.java</sourceFile><mutatedClass>fr.epu.bicycle.EBikeTest</mutatedClass><mutatedMethod>testAddKm</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>16</index></indexes><blocks><block>1</block></blocks><killingTest>fr.epu.bicycle.EBikeTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.EBikeTest]/[method:testAddKm()]</killingTest><description>removed call to fr/epu/bicycle/EBike::addKm</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EBikeTest.java</sourceFile><mutatedClass>fr.epu.bicycle.EBikeTest</mutatedClass><mutatedMethod>testAddKm</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>25</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EBikeTest.java</sourceFile><mutatedClass>fr.epu.bicycle.EBikeTest</mutatedClass><mutatedMethod>testAddNegativeKm</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>16</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to fr/epu/bicycle/EBike::addKm</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EBikeTest.java</sourceFile><mutatedClass>fr.epu.bicycle.EBikeTest</mutatedClass><mutatedMethod>testAddNegativeKm</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EBikeTest.java</sourceFile><mutatedClass>fr.epu.bicycle.EBikeTest</mutatedClass><mutatedMethod>testCreateEBike</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$ConstructorMethodTest$ConstructorWithParametersTest</mutatedClass><mutatedMethod>constructor_whenInitializedWithTwoNumbers_coordinatesAreCorrect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$ConstructorMethodTest$ConstructorWithParametersTest</mutatedClass><mutatedMethod>constructor_whenInitializedWithTwoNumbers_coordinatesAreCorrect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$ConstructorMethodTest$ConstructorWithParametersTest</mutatedClass><mutatedMethod>constructor_whenInitializedWithTwoNumbers_coordinatesAreCorrect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>18</index></indexes><blocks><block>5</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$ConstructorMethodTest$ConstructorWithParametersTest</mutatedClass><mutatedMethod>constructor_whenInitializedWithTwoNumbers_coordinatesAreCorrect</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>24</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GPS.java</sourceFile><mutatedClass>fr.epu.bicycle.GPS</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()Lfr/epu/bicycle/Position;</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.GPSTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.GPSTest]/[nested-class:GPSInitializationTest]/[method:coordinatesAreCorrectsAfterInitialization()]</killingTest><description>replaced return value with null for fr/epu/bicycle/GPS::getPosition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GPS.java</sourceFile><mutatedClass>fr.epu.bicycle.GPS</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest>fr.epu.bicycle.GPSTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.GPSTest]/[nested-class:moveMethodTest]/[method:positionIsMovedCorrectly()]</killingTest><description>removed call to fr/epu/bicycle/Position::setX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GPS.java</sourceFile><mutatedClass>fr.epu.bicycle.GPS</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTest>fr.epu.bicycle.GPSTest.[engine:junit-jupiter]/[class:fr.epu.bicycle.GPSTest]/[nested-class:moveMethodTest]/[method:positionIsMovedCorrectly()]</killingTest><description>removed call to fr/epu/bicycle/Position::setY</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Bike.java</sourceFile><mutatedClass>fr.epu.bicycle.Bike</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()Ljava/util/Optional;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with Optional.empty for fr/epu/bicycle/Bike::getPosition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Bike.java</sourceFile><mutatedClass>fr.epu.bicycle.Bike</mutatedClass><mutatedMethod>isBorrowable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Bike.java</sourceFile><mutatedClass>fr.epu.bicycle.Bike</mutatedClass><mutatedMethod>isBorrowable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced boolean return with true for fr/epu/bicycle/Bike::isBorrowable</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$DistanceMethodTest</mutatedClass><mutatedMethod>distance_whenGivenTwoPositions_isCalculatedCorrectly</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$DistanceMethodTest</mutatedClass><mutatedMethod>distance_whenGivenTwoPositions_isCalculatedCorrectly</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>16</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertNotEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$DistanceMethodTest</mutatedClass><mutatedMethod>distance_whenPositionsAreSwitched_isTheSame</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$ConstructorMethodTest$ConstructorWithoutParametersTest</mutatedClass><mutatedMethod>constructor_whenInitializedWithoutParameters_defaultCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$ConstructorMethodTest$ConstructorWithoutParametersTest</mutatedClass><mutatedMethod>constructor_whenInitializedWithoutParameters_defaultCoordinates</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>18</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$batteryInitializationTest</mutatedClass><mutatedMethod>testBatteryChargeValueAfterInitialization</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BatteryTest.java</sourceFile><mutatedClass>fr.epu.bicycle.BatteryTest$batteryInitializationTest</mutatedClass><mutatedMethod>testBatteryInitialisationWithNegativeCharge</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>18</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GPSTest.java</sourceFile><mutatedClass>fr.epu.bicycle.GPSTest$GPSInitializationTest</mutatedClass><mutatedMethod>coordinatesAreCorrectsAfterInitialization</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GPSTest.java</sourceFile><mutatedClass>fr.epu.bicycle.GPSTest$GPSInitializationTest</mutatedClass><mutatedMethod>coordinatesAreCorrectsAfterInitialization</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>19</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$EquivalentMethodTest</mutatedClass><mutatedMethod>equivalent_whenTwoPositionsAreNearEnough_true</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertTrue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PositionTest.java</sourceFile><mutatedClass>fr.epu.bicycle.PositionTest$EquivalentMethodTest</mutatedClass><mutatedMethod>equivalent_whenTwoPositionsAreNearEnough_true</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/junit/jupiter/api/Assertions::assertFalse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Station.java</sourceFile><mutatedClass>fr.epu.bicycle.Station</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()Lfr/epu/bicycle/Position;</methodDescription><lineNumber>5</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for fr/epu/bicycle/Station::getPosition</description></mutation>
</mutations>
